
require("packer").use {
    "hrsh7th/nvim-cmp",
    requires = {
        {"hrsh7th/cmp-nvim-lsp"},
        {"neovim/nvim-lspconfig"},
        {"L3MON4D3/LuaSnip"},
        {"styled-components/vim-styled-components", branch = "main", config = function()
            vim.cmd[[
            autocmd BufEnter *.{js,jsx,ts,tsx} :syntax sync fromstart
            autocmd BufLeave *.{js,jsx,ts,tsx} :syntax sync clear
            ]]
        end}
    },
    config = function()
        local cmd = vim.cmd
        local cmp = require("cmp")
        local global = vim.o
        local capabilities = vim.lsp.protocol.make_client_capabilities()

        capabilities = require("cmp_nvim_lsp").update_capabilities(capabilities)

        global.completeopt = "menuone,noselect"

        cmp.setup({
            snippet = {
              expand = function(args)
                -- vim.fn["vsnip#anonymous"](args.body) -- For `vsnip` users.
                require('luasnip').lsp_expand(args.body) -- For `luasnip` users.
                -- require('snippy').expand_snippet(args.body) -- For `snippy` users.
                -- vim.fn["UltiSnips#Anon"](args.body) -- For `ultisnips` users.
              end,
            },
            window = {
              completion = cmp.config.window.bordered(),
              documentation = cmp.config.window.bordered(),
            },
            mapping = cmp.mapping.preset.insert({
            --   ['<C-b>'] = cmp.mapping.scroll_docs(-4),
            --   ['<C-f>'] = cmp.mapping.scroll_docs(4),
              -- ['<S-Space>'] = cmp.mapping.complete(),
              -- ['<C-e>'] = cmp.mapping.abort(),
              ['<CR>'] = cmp.mapping.confirm({ select = true }), -- Accept currently selected item. Set `select` to `false` to only confirm explicitly selected items.
            }),
            sources = cmp.config.sources({
              { name = 'nvim_lsp' },
              -- { name = 'vsnip' }, -- For vsnip users.
              { name = 'luasnip' }, -- For luasnip users.
              -- { name = 'ultisnips' }, -- For ultisnips users.
              -- { name = 'snippy' }, -- For snippy users.
            }, {
              { name = 'buffer' },
            })
          })
    end
}

